swagger: '2.0'
info:
  version: '1.0'
  title: "Chron"
  description: Descrizione
  license:
    name: MIT
    url: https://github.com/Saaam1607/Chron
host: chron.render.com
basePath: /api/v1
schemes:
- https
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
consumes:
- application/json
produces:
- application/json

paths:

  /timer/stato:
    get:
      summary: Stato del timer
      description: Restituisce lo stato corrente del timer Pomodoro.
      responses:
        200:
          description: Stato del timer ottenuto con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se lo stato è stato ottenuto con successo
                example: true
              fase:
                type: number
                description: Numero della fase corrente del timer Pomodoro
                example: 0
              durata:
                type: number
                description: Durata della fase corrente del timer Pomodoro in minuti
                example: 25
        500:
          description: Errore durante la lettura dello stato del timer
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante la lettura dello stato
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore durante la lettura dello stato del timer
              
  /timer/fine:
    put:
      summary: Fine della fase del timer
      description: Aggiorna lo stato del timer Pomodoro alla fine della fase corrente.
      parameters:
        - in: body
          name: body
          description: Oggetto contenente la fase corrente del timer
          required: true
          schema:
            type: object
            properties:
              fase:
                type: number
                description: Numero della fase corrente del timer Pomodoro
                example: 0
      responses:
        200:
          description: Aggiornamento del timer effettuato con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se l'aggiornamento del timer è stato effettuato con successo
                example: true
              fase:
                type: number
                description: Numero della fase aggiornata del timer Pomodoro
                example: 1
              durata:
                type: number
                description: Durata della fase aggiornata del timer Pomodoro in minuti
                example: 5
        400:
          description: Errore, input non validi
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa di input non validi
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore, input non validi
        404:
          description: Errore, sessione mancante o non valida
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa di una sessione mancante o non valida
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore, sessione mancante o non valida
        500:
          description: Errore interno durante l'aggiornamento del timer
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore interno durante l'aggiornamento del timer
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore interno durante l'aggiornamento del timer
                
  /timer/impostazioni:
    get:
      summary: Ottiene le impostazioni del timer Pomodoro
      description: Restituisce le impostazioni correnti del timer Pomodoro.
      responses:
        200:
          description: Impostazioni del timer ottenute con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se il recupero delle impostazioni è stato effettuato con successo
                example: true
              durataPomodoro:
                type: number
                description: Durata del pomodoro in minuti
                example: 25
              durataPausaCorta:
                type: number
                description: Durata della pausa corta in minuti
                example: 5
              durataPausaLunga:
                type: number
                description: Durata della pausa lunga in minuti
                example: 15
              pomodoriPerSessione:
                type: number
                description: Numero di pomodori completati per ogni sessione
                example: 4
        404:
          description: Errore, impostazioni della sessione mancanti o non valide
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa di impostazioni mancanti o non valide
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore, impostazioni della sessione mancanti o non valide
        500:
          description: Errore nella lettura delle impostazioni
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore nella lettura delle impostazioni
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore nella lettura delle impostazioni
    put:
      summary: Modifica le impostazioni del timer Pomodoro
      description: Modifica le impostazioni del timer Pomodoro con i nuovi valori specificati.
      parameters:
        - in: body
          name: body
          description: Oggetto contenente la i valori corrente del timer
          required: true
          schema:
            type: object
            properties:
              pomodoro:
                type: number
                description: Durata del pomodoro in minuti
                example: 25
              pausaCorta:
                type: number
                description: Durata della pausa corta in minuti
                example: 5
              pausaLunga:
                type: number
                description: Durata della pausa lunga in minuti
                example: 15
              sessioni:
                type: number
                description: Numero di pomodori completati per ogni sessione
                example: 4
      responses:
        204:
          description: Impostazioni del timer modificate con successo
        400:
          description: Errore, input non validi
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa di input non validi
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore, input non validi
        404:
          description: Errore, sessione mancante o non valida
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa di una sessione mancante o non valida
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore, sessione mancante o non valida
        500:
          description: Errore durante la modifica delle impostazioni
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante la modifica delle impostazioni
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore durante la modifica delle impostazioni
                
  /timer/salva-sessione:
    x-summary: Salva o crea sessione
    put:
      summary: api/v1/sessione/
      security:
        - JWT: []
      description: >-
        Crea o aggiorna una sessione nel database.
        Se esiste già una sessione con la stessa data e ID_utente,
        aggiorna il campo "minuti". Altrimenti, crea una nuova sessione.
      parameters:
        - name: Authorization
          in: header
          description: token
          required: true
          type: string
        - name: body
          in: body
          description: Oggetto contentente il tempo di studio espresso in minuti
          schema:
            type: object
            properties:
              minuti:
                type: number
                description: Tempo di studio espresso in minuti
                example: 120
      responses:
        201:
          description: Sessione salvata con successo.
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante il salvataggio della sessione
                example: true
              message:
                type: string
                description: Messaggio di conferma
                example: Sessione salvata con successo.
        400:
          description: Parametro minuti mancante o non valido.
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante il salvataggio della sessione
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Parametro minuti mancante o non valido.
        500:
          description: Errore del server.
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante il salvataggio della sessione
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Non è stato possibile salvare la sessione. Errore del server.

  /profilo/autenticazione:
    post:
      summary: Effetua il login
      description: >-
        Effetua il login, controllando la corrispondenza tra le credenziali ricevute (email e password).
        Se l'autenticazione avviene con successo viene restituito un jwt token
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Dati di autenticazione (email e password)
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: Email dell'utente
                example: randomEmail@gmail.com
              password:
                type: string
                description: Password dell'utente
                example: randomPassword123!
      responses:
        200:
          description: Autenticazione riuscita
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se l'autenticazione è stata completata con successo
                example: true
              token:
                type: string
                description: Token di accesso generato per l'utente
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        400:
          description: Parametri mancanti
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Parametri email o password mancanti
        401:
          description: Autenticazione non riuscita
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Autenticazione non riuscita, credenziali non corrispondenti o valide
                
                
        500:
          description: Errore durante la richiesta di autenticazione
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Il messaggio di errore
                example: L'operazione di richiesta di autenticazione non è andata a buon fine

  /profilo/nuova-autenticazione:
    post:
      summary: Richiesta di nuova autenticazione
      description: >-
        Effetua la registrazione, controllando la validità e la corrispondenza tra le credenziali ricevute (email e password).
        Se l'autenticazione avviene con successo viene restituito un jwt token. Invia una email di conferma all'utente con un link di verifica.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Dati di nuova autenticazione (email, password e username)
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: Email dell'utente
                example: randomEmail@gmail.com
              password:
                type: string
                description: Password dell'utente
                example: randomPassword123!
              username:
                type: string
                description: Username dell'utente
                example: randomUsername
      responses:
        200:
          description: Email di conferma inviata con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: true
              message:
                type: string
                description: Messaggio di conferma
                example: Email di Conferma Account inviata con successo!
        400:
          description: Parametri mancanti
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: I parametri username, email o password mancanti
        401:
          description: Credenziali non valide
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Autenticazione non riuscita, credenziali non corrispondenti o valide
        409:
          description: Email già utilizzata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Errore, email già utilizzata
        500:
          description: Errore durante la richiesta di nuova autenticazione
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Il messaggio di errore
                example: L'operazione di richiesta di registrazione non è andata a buon fine
                
  /profilo/verifica-registrazione:
    post:
      summary: Verifica registrazione
      description: >-
        Verifica la registrazione di un account utilizzando un token di conferma.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Dati di verifica registrazione
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
                description: Token di conferma registrazione
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJhbmRvbUVtYWlsQGdtYWlsLmNvbSIsInBhc3N3b3JkIjoicmFuZG9tUGFzc3dvcmQxMjMhIiwidXNlcm5hbWUiOiJyYW5kb21Vc2VybmFtZSIsImlhdCI6MTYzMzEwMDg0OSwiZXhwIjoxNjMzMTAwODQ5fQ.S7r7hH-0fNujXj9gzGdRz46uLCgAY3iBLXTHD8-_bdQ
      responses:
        201:
          description: Account registrato con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: true
              message:
                type: string
                description: Messaggio di conferma
                example: Account registrato con successo!
        400:
          description: Parametro mancante
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Il parametro token è mancante!
        401:
          description: Token non valido o scaduto
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Token non valido o scaduto!
        409:
          description: Account già esistente
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Account già esistente!
        500:
          description: Errore durante la registrazione
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di registrazione non è andata a buon fine
  
  /profilo/richiesta-nuova-password:
    post:
      summary: Richiesta di nuova password
      description: >-
        Invia una email di recupero password all'utente con un link per il reset della password.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Dati di richiesta nuova password (email)
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: Email dell'utente
                example: randomEmail@gmail.com
      responses:
        200:
          description: Email di recupero password inviata con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: true
              message:
                type: string
                description: Messaggio di conferma
                example: Email inviata con successo!
        400:
          description: Parametro mancante
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Il parametro "email" mancante!
        404:
          description: Utente non trovato
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Utente non trovato con l'email fornita!
        409:
          description: Impossibile recuperare la password
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Non puoi recuperare la password di un account creato con la registrazione esterna. Per autenticarti utilizza direttamente l'apposito bottone "accedi con Google".
        500:
          description: Errore durante la richiesta di nuova password
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di richiesta nuova password non è andata a buon fine.
                
  /profilo/richiesta-reset-password:
    post:
      summary: Richiesta di reset password
      description: >-
        Resetta la password dell'utente utilizzando il token di recupero password e la nuova password forniti.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Dati di reset password (token e password)
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
                description: Token di recupero password
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhZGJjNTQzLWU4MmMtNGIyZS1hNmRiLWU5ZTJiMzY0ZGJjZSIsImlhdCI6MTYyMzEyMjM2MCwiZXhwIjoxNjIzMTI1OTYwfQ.5dLTKzk3MwC6A4O0n2k-yq_a1tNRmso_9qZT3Fjsgv4
              password:
                type: string
                description: Nuova password dell'utente
                example: newPassword123!
      responses:
        200:
          description: Password ripristinata con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: true
              message:
                type: string
                description: Messaggio di conferma
                example: Password aggiornata con successo!
        400:
          description: Parametri mancanti
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: I parametri "token" o "password" sono mancanti!
        401:
          description: Token non valido o scaduto
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Token non valido o scaduto!
        500:
          description: Errore durante il ripristino della password
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di ripristino della password non è andata a buon fine.      
    
  /autenticazione-esterna:
    post:
      summary: Autenticazione esterna
      description: >-
        Gestisce l'autenticazione dell'utente utilizzando un token di autenticazione Google e l'ID del client.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Dati di autenticazione esterna (token e clientId)
          required: true
          schema:
            type: object
            properties:
              gToken:
                type: string
                description: Token di autenticazione Google
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhZGJjNTQzLWU4MmMtNGIyZS1hNmRiLWU5ZTJiMzY0ZGJjZSIsImlhdCI6MTYyMzEyMjM2MCwiZXhwIjoxNjIzMTI1OTYwfQ.5dLTKzk3MwC6A4O0n2k-yq_a1tNRmso_9qZT3Fjsgv4
              clientId:
                type: string
                description: ID del client
                example: myClient123
      responses:
        200:
          description: Autenticazione effettuata con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se l'autenticazione è stata completata con successo
                example: true
              message:
                type: string
                description: Messaggio di conferma
                example: L'autenticazione effettuata con successo!
              token:
                type: string
                description: Token di accesso generato
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhZGJjNTQzLWU4MmMtNGIyZS1hNmRiLWU5ZTJiMzY0ZGJjZSIsImlhdCI6MTYyMzEyMjM2MCwiZXhwIjoxNjIzMTI1OTYwfQ.5dLTKzk3MwC6A4O0n2k-yq_a1tNRmso_9qZT3Fjsgv4
        201:
          description: Utente registrato e autenticazione effettuata con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se l'autenticazione è stata completata con successo
                example: true
              message:
                type: string
                description: Messaggio di conferma
                example: Utente registrato e l'autenticazione effettuata con successo!
              token:
                type: string
                description: Token di accesso generato
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhZGJjNTQzLWU4MmMtNGIyZS1ilo
                
  /todos:
    get:
      summary: Ottiene la lista delle tasks
      security:
        - JWT: []
      description: Restituisce la lista delle tasks dell'utente corrente.
      parameters:
        - name: Authorization
          in: header
          description: token
          required: true
          type: string
      responses:
        200:
          description: Lista delle tasks ottenuta con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se l'operazione di lettura delle tasks è stata completata con successo
                example: true
              tasks:
                type: array
                items:
                  $ref: '#/definitions/Task'
        204:
          description: Nessuna task trovata
        401:
          description: Azione non autorizzata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa dell'autorizzazione non concessa
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Utente non autenticato, codice non valido
        500:
          description: Errore durante la lettura delle tasks
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante la lettura delle tasks
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di lettura delle task non è andata a buon fine
    
    post:
      summary: Creare una nuova task
      security:
        - JWT: []
      description: Crea una nuova task per l'utente corrente.
      parameters:
        - name: Authorization
          in: header
          description: token
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/NewTask'
      responses:
        201:
          description: Task creata con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se l'operazione di creazione della task è stata completata con successo
                example: true
              task:
                $ref: '#/definitions/Task'
        400:
          description: Parametro mancante
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa di un parametro mancante
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Il parametro nome mancante
        401:
          description: Azione non autorizzata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa dell'autorizzazione non concessa
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Utente non autenticato, codice non valido
        500:
          description: Errore durante la creazione del task
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante la creazione del task
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di creazione della task non è andata a buon fine
    
    put:
      summary: Contrassegnare un task
      security:
        - JWT: []
      description: Contrassegna un task specificato dall'ID.
      parameters:
        - name: Authorization
          in: header
          description: token
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: string
            description: ID della task da contrassegnare
            example: XXX
      responses:
        200:
          description: Task contrassegnata con successo
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se l'operazione di contrassegnazione della task è stata completata con successo
                example: true
              result:
                $ref: '#/definitions/Task'
        400:
          description: Parametro mancante
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa di un parametro mancante
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Il parametro idTask è mancante
        401:
          description: Azione non autorizzata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa dell'autorizzazione non concessa
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Utente non autenticato, codice non valido
        404:
          description: Task non trovata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore poiché l'ID specificato non è stata trovato
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Task con id XXX non trovata
        500:
          description: Errore durante l'aggiornamento del task
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante l'aggiornamento della task
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di aggiornamento della task non è andata a buon fine
    delete:
      summary: Elimina una task
      security:
        - JWT: []
      description: Elimina la task specificata dall'ID.
      parameters:
        - name: Authorization
          in: header
          description: token
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: string
            description: ID della task da eliminare
            example: XXX
      responses:
        200:
          description: Task eliminata con successo
          schema:
            type: boolean
            description: Indica se l'operazione di eliminazione della task è stata completata con successo
            example: true
        400:
          description: Parametro mancante
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante l'eliminazione della task
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Il parametro idTask è mancante
        401:
          description: Azione non autorizzata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa dell'autorizzazione non concessa
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Utente non autenticato, codice non valido
        404:
          description: Task non trovata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante l'eliminazione della task
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: La task con id XXX non è stata trovata
        500:
          description: Errore durante l'eliminazione della task
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore durante l'eliminazione della task
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di rimozione della task non è andata a buon fine

  /ordinata:
    get:
      summary: Ottieni la lista delle task ordinata
      security:
        - JWT: []
      description: Restituisce la lista delle task ordinate in base al parametro di ordinamento specificato.
      parameters:
        - name: Authorization
          in: header
          description: token
          required: true
          type: string
        - name: sort
          in: query
          description: Parametro di ordinamento delle task.
          required: true
          type: string
          enum: [name, date, group]
      responses:
        200:
          description: Successo. La lista delle task ordinata è stata restituita correttamente.
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo.
                example: true
              tasks:
                type: array
                items:
                  $ref: '#/definitions/Task'
        204:
          description: Nessun contenuto. La lista delle task è vuota.
        400:
          description: Parametro non valido. Il parametro di ordinamento specificato non è valido.
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
              message:
                type: string
                description: Messaggio di errore
                example: Parametro di ordinamento non valido. Utilizzare name, date o group
        401:
          description: Azione non autorizzata
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se si è verificato un errore a causa dell'autorizzazione non concessa
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: Utente non autenticato, codice non valido
        500:
          description: Errore del server. Si è verificato un errore durante l'ordinamento delle task.
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: Indica se la richiesta è stata completata con successo
                example: false
              message:
                type: string
                description: Messaggio di errore
                example: L'operazione di ordinamento delle task non è andata a buon fine

definitions:
  NewTask:
    type: object
    properties:
      nome:
        type: string
        description: Nome della task
      dataScadenza:
        type: string
        description: Data di scadenza della task (YYYY-MM-DD)
  Task:
    type: object
    properties:
      _id:
        type: string
        description: ID della task
      nome:
        type: string
        description: Nome della task
      dataScadenza:
        type: string
        description: Data di scadenza della task
      contrassegna:
        type: boolean
        description: Indica se la task è contrassegnato
      nomeGruppo:
        type: string
        description: Nome del gruppo a cui appartiene la task

  # /profilo/nuova-autenticazione:
  #   post:
  #     summary: Effetua la registrazione
  #     description: >-
  #       Effetua la registrazione, controllando la validità e la corrispondenza tra le credenziali ricevute (email e password).
  #       Se l'autenticazione avviene con successo viene restituito un jwt token
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - username
  #               - email
  #               - password
  #             properties:
  #               username:
  #                 type: string
  #                 description: "Username ricevuto dall'utente"
  #               email:
  #                 type: string
  #                 description: "Email ricevuta dall'utente"
  #               password:
  #                 type: string
  #                 description: "Password ricevuta dall'utente"
  #     responses:
  #       "200":
  #         description: Registrazione e autenticazione completate con successo
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 token:
  #                   type: string
  #                   example: xxxx
  #       "401":
  #         description: Errore, credenziali non valide
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, credenziali non valide
  #       "409":
  #         description: Errore, email già utilizzata
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, email già utilizzata
  #       "500":
  #         description: Errore durante la registrazione
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore durante la registrazione
                    
  # /profilo/data:
  #   get:
  #     summary: Recupera i dati di un utente (email e username)
  #     description: >-
  #       Recupera i dati di un utente (email e username). A questo proposito viene gestita l'interazione con il db
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - id
  #             properties:
  #               id:
  #                 type: integer
  #                 description: "ID dell'utente"
  #     responses:
  #       "200":
  #         description: Registrazione e autenticazione completate con successo
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 username:
  #                   type: string
  #                   example: username
  #                 email:
  #                   type: string
  #                   example: email
  #       "400":
  #         description: Errore, ID non trovato
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, ID non trovato
  #       "500":
  #         description: Errore durante la lettura dei dati
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore durante la lettura dei dati
  # /timer/stato:
  #   get:
  #     summary: Legge fase e durata del timer
  #     description: >-
  #       Legge e restituisce la fase e durata del timer. Se non trova i dati riguardo alle impostazioni sullo sessione storage o se questi non sono validi, salva quelli di default
  #     responses:
  #       "200":
  #         description: Modifica delle impostazioni avvenuta con successo
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 fase:
  #                   type: integer
  #                   example: 1
  #                 durata:
  #                   type: integer
  #                   example: 5
  #       "500":
  #         description: Errore durante la lettura dello stato del timer
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore durante la lettura dello stato del timer
                    
  # /timer/fine:
  #   put:
  #     summary: Aggiorna la fase e durata del timer al suo termine
  #     description: >-
  #       Aggiorna la fase e durata del timer. Se il timer è nella fase pomdoro e il tempo non è terminato, la fase non verrà aggiornata e il tempo del pomdoro verra ristabilito
  #       Se il timer è nella fase pomdoro e il tempo è esaurito oppure se è nella fase di pausa (lunga o corta), vengono aggiornate fase e durata.
  #       A questo fine utilizza dei dati salvati all'interno dello session storage che devono quindi essere presenti e validi
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - fase
  #               - time
  #             properties:
  #               fase:
  #                 type: integer
  #                 enum: [0, 1, 2]
  #                 description: "Fase del timer (pomodoro, pausaCorta, pausaLunga)"
  #               time:
  #                 type: integer
  #                 description: "Durata della fase"
  #     responses:
  #       "200":
  #         description: Modifica delle impostazioni avvenuta con successo
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 fase:
  #                   type: integer
  #                   example: 1
  #                 durata:
  #                   type: integer
  #                   example: 5
  #       "400":
  #         description: Input non validi
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, input non validi
  #       "404":
  #         description: Sessione mancante o non valida
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, sessione mancante o non valida
  #       "500":
  #         description: Errore interno durante l'aggiornamento del timer
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore interno durante l'aggiornamento del timer
                    
  # /timer/impostazioni:
  #   get:
  #     summary: Legge e ritorna i valori delle impostazioni attuali del timer
  #     description: >-
  #       Legge e ritorna i valori delle impostazioni attuali del timer dallo session storage e le restituisce.
  #       I valori delle impostazioni, essendo salvati nella sessione, sono relativi unicamente alla sessione corrente.
  #       I dati delle impostazioni salvati nella sessione devono essere presenti e validi.
  #     responses:
  #       "200":
  #         description: Lettura delle impostazioni avvenuta con successo
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 durataPomodoro:
  #                   type: integer
  #                   example: 15
  #                 durataPausaCorta:
  #                   type: integer
  #                   example: 5
  #                 durataPausaLunga:
  #                   type: integer
  #                   example: 15
  #                 pomodoriPerSessione:
  #                   type: integer
  #                   example: 4
  #       "404":
  #         description: Impostazioni della sessione mancanti o non valide
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, impostazioni della sessione mancanti o non valide
  #       "500":
  #         description: Errore nella lettura delle impostazioni
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore nella lettura delle impostazioni
                    
  #   put:
  #     summary: Modifica le impostazioni del timer
  #     description: >-
  #       Modifica le impostazioni del timer con i valori ricevuti nel body della richiesta. Le impostazoni rimangono solo localmente poiché vengono salvate nello session storage.
  #       In particolare permette di modificare la durata della sessione di studio, la durata
  #       della pausa breve, della pausa lunga e del numero di sessioni prima della pausa lunga.
  #     parameters:
  #       - name: pomodoro
  #         in: body
  #         required: true
  #       #   example: 25
  #       # content:
  #       #   application/json:
  #       #     schema:
  #       #       type: object
  #       #       required:
  #       #         - pomdoro
  #       #         - pausaCorta
  #       #         - pausaLunga
  #       #         - sessioni
  #       #       properties:
  #       #         pomdoro:
  #       #           type: integer
  #       #           description: "Durata del pomodoro, ovvero il tempo della singola sessione"
  #       #           example: 25
  #       #         pausaCorta:
  #       #           type: integer
  #       #           description: "Durata della pausaCorta"
  #       #           example: 5
  #       #         pausaLunga:
  #       #           type: integer
  #       #           description: "Durata della pausaLunga"
  #       #           example: 15
  #       #         sessioni:
  #       #           type: integer
  #       #           description: "Numero di sessioni prima della pausaLunga"
  #       #           example: 4
  #     responses:
  #       "204":
  #         description: Modifica delle impostazioni avvenuta con successo
  #       "400":
  #         description: Input non validi
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, input non validi
  #       "404":
  #         description: Sessione mancante o non valida
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, sessione mancante o non valida
  #       "500":
  #         description: Errore durante la modifica delle impostazioni
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore durante la modifica delle impostazioni
                    
  # /timer/salva-sessione:
  #   put:
  #     summary: Salva o crea sessione
  #     description: >-
  #       Crea o aggiorna una sessione nel database.
  #       Se esiste già una sessione con la stessa data e ID_utente,
  #       aggiorna il campo "minuti". Altrimenti, crea una nuova sessione.
  #     parameters:
  #       - in: header
  #         name: security
  #         description: Token JWT di autorizzazione
  #         required: true
  #         schema:
  #           type: string
  #           example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             required:
  #               - minuti
  #               - date
  #             properties:
  #               minuti:
  #                 type: integer
  #                 example: 25
  #               date:
  #                 type: string
  #                 example: "2023-05-23T00:00:00"
  #     responses:
  #       "200":
  #         description: Sessione salvata con successo.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: Sessione salvata con successo
  #       "201":
  #         description: Sessione salvata con successo.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 message:
  #                   type: string
  #                   example: Sessione salvata con successo
  #       "400":
  #         description: Parametri mancanti o non validi
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore, parametri mancanti o non validi
  #       "500":
  #         description: Errore interno durante il salvataggio della sessione
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: Errore interno durante il salvataggio della sessione
  # /todos/:
  #   get:
  #     summary: Ottieni elenco delle tasks
  #     description: >-
  #       L'API delle attività è progettata per gestire le attività degli utenti.
  #       Questo endpoint consente agli utenti di ottenere l'elenco delle task salvati nel sistema.
  #       Neccessita che l'utente sia autenticato quindi nel header ci deve essere il token.
  #     responses:
  #       "200":
  #         description: Elenco delle tasks recuperato con successo
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 tasks:
  #                   type: array
  #                   items:
  #                     type: object
  #                     properties:
  #                       _id:
  #                         type: string
  #                         example: "6462912e2af3e04ffc16c84d"
  #                       ID_utente:
  #                         type: integer
  #                         example: 1
  #                       nome:
  #                         type: string
  #                         example: "temp6"
  #                       dataScadenza:
  #                         type: string
  #                         example: "2023-05-27T00:00:00.000Z"
  #                       contrassegna:
  #                         type: boolean
  #                         example: false
  #                       nomeGruppo:
  #                         type: string
  #                         example: "vxvc"
  #       "204":
  #         description: Nessuna task da mostrare. NO CONTENT
  #       "500":
  #         description: Errore del server.
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "L'operazione di lettura delle task non è andata a buon fine. ID_utdfente is not defined"

  #   post:
  #     summary: Crea una nuova task
  #     description: "Crea una nuova task e la aggiunge sia alla ListaTasks che nel database. La data di scadenza è facoltativa."
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               nome:
  #                 type: string
  #                 description: "Nome della task"
  #               dataScadenza:
  #                 type: string
  #                 description: "Data di scadenza della task"
  #     responses:
  #       "201":
  #         description: "Creazione del task completata con successo"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 task:
  #                   type: object
  #                   properties:
  #                     _id:
  #                       type: string
  #                       description: "ID della task creato"
  #                     ID_utente:
  #                       type: string
  #                       description: "ID del utente a cui appartiene la task"
  #                     contrassegna:
  #                       type: boolean
  #                       description: "stato di completamento della task"
  #                     nomeGruppo:
  #                       type: string
  #                       description: "ID del gruppo a cui appartiene la task"
  #       "400":
  #         description: "Richiesta non valida"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Nome mancante"
  #       "500":
  #         description: "Errore durante la creazione del task"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Si è verificato un errore durante la creazione del task. Errore: [messaggio di errore]"

  #   put:
  #     summary: Contrassegna una task come completata
  #     description: "Contrassegna una task come completata sulla base dell'ID fornito nella richiesta."
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               id:
  #                 type: string
  #                 description: "ID della task da contrassegnare come completata"
  #     responses:
  #       "200":
  #         description: "Task contrassegnata come completata con successo"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 result:
  #                   type: object
  #                   properties:
  #                     _id:
  #                       type: string
  #                       description: "ID della task contrassegnata"
  #                     ID_utente:
  #                       type: string
  #                       description: "ID dell'utente a cui appartiene la task"
  #                     contrassegna:
  #                       type: boolean
  #                       description: "Stato di completamento della task"
  #                     nomeGruppo:
  #                       type: string
  #                       description: "ID del gruppo a cui appartiene la task"
  #       "404":
  #         description: "Task non trovata"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Task con ID [ID della task] non trovata"
  #       "500":
  #         description: "Errore durante la contrassegnazione della task"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Si è verificato un errore durante l'operazione. Messaggio: [messaggio di errore]"

  #   delete:
  #     summary: Elimina una task contrassegnata
  #     description: "Elimina una task contrassegnata sulla base dell'ID fornito nella richiesta. Una task può essere eliminata soltanto se è stata contrassegnata in precedenza."
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               id:
  #                 type: string
  #                 description: "ID della task da eliminare"
  #     responses:
  #       "200":
  #         description: "Task eliminata con successo"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: true
  #                 result:
  #                   type: object
  #                   properties:
  #                     _id:
  #                       type: string
  #                       description: "ID della task eliminata"
  #                     ID_utente:
  #                       type: string
  #                       description: "ID dell'utente a cui apparteneva la task"
  #                     contrassegna:
  #                       type: boolean
  #                       description: "Stato di completamento della task"
  #                     nomeGruppo:
  #                       type: string
  #                       description: "ID del gruppo a cui apparteneva la task"
  #       "404":
  #         description: "Task non trovata"
  #         content:
  #           application/json:
  #             schema:
  #               type: object
  #               properties:
  #                 success:
  #                   type: boolean
  #                   example: false
  #                 message:
  #                   type: string
  #                   example: "Task con ID [ID della task] non trovata"